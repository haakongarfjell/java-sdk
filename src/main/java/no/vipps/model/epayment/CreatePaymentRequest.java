/*
 * Vipps ePayment API
 * The Vipps ePayment API. See the [API Guide](https://vippsas.github.io/vipps-developer-docs/docs/APIs/epayment-api) for more information.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package no.vipps.model.epayment;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Map;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Singular;
import lombok.ToString;
import lombok.extern.jackson.Jacksonized;

/**
 * CreatePaymentRequest.
 *
 * <p>The &#x60;CreatePaymentRequest&#x60; object.
 */
@Jacksonized
@EqualsAndHashCode
@Getter
@ToString
@Builder
public class CreatePaymentRequest {
  /** */
  private Amount amount;
  /**
   * For special cases. The sales unit must be configured by Vipps. We strongly recommend using
   * "reserve capture" in all situations. Default is &#x60;false&#x60;.
   */
  @Builder.Default private Boolean directCapture = false;
  /** */
  private Customer customer;
  /**
   * The type of customer interaction that triggers the purchase. &#x60;CUSTOMER_PRESENT&#x60; means
   * that the customer is physically present at the point of sale when the payment is made,
   * typically in a store.
   */
  @Builder.Default
  private CustomerInteraction customerInteraction = CustomerInteraction.CUSTOMER_NOT_PRESENT;
  /** */
  private IndustryData industryData;
  /** */
  private PaymentMethod paymentMethod;
  /** */
  private ProfileRequest profile;
  /** A reference */
  private String reference;
  /**
   * The URL the user is returned to after the payment session. The URL has to use the
   * &#x60;https://&#x60; scheme or a custom URL scheme.
   */
  private String returnUrl;
  /**
   * The flow for bringing to user to the Vipps Wallet payment confirmation screen. If
   * &#x60;userFlow&#x60; is &#x60;PUSH_MESSAGE&#x60;, a valid value for
   * &#x60;customer.phoneNumber&#x60; is required.
   */
  private CreatePaymentRequestUserFlow userFlow;
  /**
   * The payment will expire at the given date and time. The format must adhere to RFC 3339. The
   * value must be more than 10 minutes and less than 28 days in the future. Can only be combined
   * with &#x60;userFlow: PUSH_MESSAGE&#x60; or &#x60;userFlow: QR&#x60;.
   */
  private String expiresAt;
  /** */
  private CreatePaymentRequestQrFormat qrFormat;
  /**
   * The payment description summary that will be provided to the user through the app, the merchant
   * portal, and the settlement files.
   */
  private String paymentDescription;

  @Singular @JsonAnySetter @JsonAnyGetter private Map<String, Object> additionalProperties;
}
